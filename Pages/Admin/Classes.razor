@using AttendanceApplication.Services;
@using AttendanceApplication.Models;
@using AttendanceApplication.Data;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore
@page "/admin/classes"
@attribute [Authorize(Roles = "Admin")]
@inject ApplicationDbContext Context
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

<h3>Manage Classes</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@if (isLoading)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="newClass" OnValidSubmit="HandleAddClass">
        <div class="form-group">
            <label>Class Name</label>
            <InputText class="form-control" @bind-Value="newClass.Name" />
        </div>
        <div class="form-group">
            <label>Teacher</label>
            <InputSelect class="form-control" @bind-Value="newClass.TeacherId">
                <option value="">Select Teacher</option>
                @if (teachers != null)
                {
                    @foreach (var teacher in teachers)
                    {
                        <option value="@teacher.Id">@teacher.DisplayName</option>
                    }
                }
            </InputSelect>
        </div>
        <button type="submit" class="btn btn-primary">Add Class</button>
    </EditForm>

    <h4>Existing Classes</h4>
    @if (classes != null && classes.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Teacher</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cls in classes)
                {
                    <tr>
                        <td>@cls.Name</td>
                        <td>@cls.Teacher?.DisplayName</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => ScheduleClass(cls.Id)">Schedule</button>
                            <button class="btn btn-danger" @onclick="() => DeleteClass(cls.Id)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No classes found.</p>
    }
}

@code {
    private Class newClass = new();
    private List<Class> classes = new();
    private List<ApplicationUser> teachers = new();
    private string errorMessage;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            classes = await Context.Classes.Include(c => c.Teacher).ToListAsync();
            teachers = (await UserManager.GetUsersInRoleAsync("Teacher")).ToList();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading data: {ex.Message}";
            classes = new List<Class>();
            teachers = new List<ApplicationUser>();
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleAddClass()
    {
        try
        {
            if (string.IsNullOrEmpty(newClass.Name))
            {
                errorMessage = "Class name is required.";
                return;
            }

            Context.Classes.Add(newClass);
            await Context.SaveChangesAsync();
            classes.Add(newClass);
            newClass = new Class();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Error adding class: {ex.Message}";
        }
    }

    private async Task DeleteClass(int classId)
    {
        try
        {
            var cls = classes.FirstOrDefault(c => c.Id == classId);
            if (cls != null)
            {
                Context.Classes.Remove(cls);
                await Context.SaveChangesAsync();
                classes.Remove(cls);
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error deleting class: {ex.Message}";
        }
    }

    private void ScheduleClass(int classId)
    {
        Navigation.NavigateTo($"/admin/scheduleclass/{classId}");
    }
}